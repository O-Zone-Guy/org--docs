#+NAME: get-list
#+BEGIN_SRC python :exports results :results value raw :var ignore_pattern="code_snippets.org"
  import re
  from fnmatch import fnmatch
  from os import listdir
  from os.path import isdir

  SIBLINGS = listdir('.')
  FILES = [f for f in SIBLINGS if fnmatch(f, '[!\.\*]*.org') and re.match(ignore_pattern, f) is None]
  DIRS = [f for f in SIBLINGS if isdir(f)]

  r = re.compile('.*#\+TITLE: (.*)', re.I)

  lists = ""
  for f in FILES:
      try:
          with open(f, 'r') as fr:
              lists += " - [[file:" + f + "][" + r.search(fr.read()).group(1) + "]]\n"
      except:
          pass

  for d in DIRS:
      f = d + "/" + d + ".org"
      try:
          with open(f, 'r') as fr:
              lists += " - [[file:" + f + "][" + r.search(fr.read()).group(1) + "]]\n"
      except:
          pass
  return lists
#+END_SRC


#+NAME: get-brain-links
#+BEGIN_SRC emacs-lisp :exports results :results raw
  (org-brain-switch-brain "~/projects/org-docs/")
  (defun link (loction name)
      "Creates an org link from a `location` and a `name`'''"
      (concat " - "
              (concat "[[file:"
                      (concat entry
                              (concat ".org]["
                                      (concat title "]]\n")))))
      )
  (defun entry-to-link (entry)
      "Creates a link from an org brain entry"
      (let ((title (org-brain-title entry)))
        (link entry title )))
  (defun get-link-list (header entry-list)
    "Get the list of links as a string. If the list is empty return an empty string."
    (if entry-list
        (concat header (reduce #'concat (mapcar 'entry-to-link entry-list)))
      ""))

  (let ((doc-parents (org-brain-parents (file-name-sans-extension (buffer-file-name))))
        (doc-children (org-brain-children (file-name-sans-extension (buffer-file-name))))
        (doc-friends (org-brain-friends (file-name-sans-extension (buffer-file-name)))))
    (concat (get-link-list "** Parents\n" doc-parents)
            (concat (get-link-list "** Children\n" doc-children)
                    (concat (get-link-list "** Friends\n" doc-friends)))))
#+END_SRC
